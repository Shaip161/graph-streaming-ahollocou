# automatically generated by the FlatBuffers compiler, do not modify

# namespace: StreamInfo

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PartitionConfiguration(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPartitionConfiguration(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PartitionConfiguration()
        x.Init(buf, n + offset)
        return x

    # PartitionConfiguration
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PartitionConfiguration
    def VmaxStart(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PartitionConfiguration
    def VmaxEnd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PartitionConfiguration
    def Condition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # PartitionConfiguration
    def Seed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PartitionConfiguration
    def Niter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def PartitionConfigurationStart(builder): builder.StartObject(5)
def PartitionConfigurationAddVmaxStart(builder, vmaxStart): builder.PrependUint32Slot(0, vmaxStart, 0)
def PartitionConfigurationAddVmaxEnd(builder, vmaxEnd): builder.PrependUint32Slot(1, vmaxEnd, 0)
def PartitionConfigurationAddCondition(builder, condition): builder.PrependUint32Slot(2, condition, 0)
def PartitionConfigurationAddSeed(builder, seed): builder.PrependInt32Slot(3, seed, 0)
def PartitionConfigurationAddNiter(builder, niter): builder.PrependUint32Slot(4, niter, 0)
def PartitionConfigurationEnd(builder): return builder.EndObject()
